     1 00000000                                 ; naskfunc
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4 00000000                                 [FORMAT "WCOFF"]				; 制作目标文件的模式	
     5 00000000                                 [BITS 32]						; 制作32位模式用的机器语言
     6 00000000                                 [INSTRSET "i486p"]				; 使用到486为止的指令
     7 00000000                                 [FILE "naskfunc.nas"]			; 源文件名信息
     8 00000000                                 
     9 00000000                                 
    10 00000000                                 ; 制作目标文件的信息
    11 00000000                                 
    12 00000000                                 
    13 00000000                                 
    14 00000000                                 	GLOBAL	_io_hlt, _io_cli, _io_sti, io_stihlt	; 程序中包含的函数名
    15 00000000                                 	GLOBAL	_io_in8, _io_in16, _io_in32
    16 00000000                                 	GLOBAL	_io_out8, _io_out16, _io_out32
    17 00000000                                 	GLOBAL	_io_load_eflags, _io_store_eflags
    18 00000000                                 
    19 00000000                                 
    20 00000000                                 ; 以下是实际的函数
    21 00000000                                 
    22                                          [SECTION .text]		; 目标文件中写了这些之后再写程序
    23 00000000                                 
    24 00000000                                 _io_hlt:	; void io_hlt(void);
    25 00000000 F4                              	HLT
    26 00000001 C3                              	RET
    27 00000002                                 
    28 00000002                                 _io_cli:
    29 00000002 FA                              	CLI
    30 00000003 C3                              	RET
    31 00000004                                 
    32 00000004                                 _io_sti:
    33 00000004 FB                              	STI
    34 00000005 C3                              	RET
    35 00000006                                 
    36 00000006                                 _io_stihlt:
    37 00000006 FB                              	STI
    38 00000007 F4                              	HLT
    39 00000008 C3                              	RET
    40 00000009                                 
    41 00000009                                 _io_in8:
    42 00000009 8B 54 24 04                     	MOV		EDX, [ESP+4]	; port
    43 0000000D B8 00000000                     	MOV		EAX, 0
    44 00000012 EC                              	IN		AL, DX
    45 00000013 C3                              	RET
    46 00000014                                 
    47 00000014                                 _io_in16:
    48 00000014 8B 54 24 04                     	MOV		EDX, [ESP+4]	; port
    49 00000018 B8 00000000                     	MOV		EAX, 0
    50 0000001D 66 ED                           	IN		AX, DX
    51 0000001F C3                              	RET
    52 00000020                                 
    53 00000020                                 _io_in32:
    54 00000020 8B 54 24 04                     	MOV		EDX, [ESP+4]	; port
    55 00000024 ED                              	IN		EAX, DX
    56 00000025 C3                              	RET
    57 00000026                                 
    58 00000026                                 _io_out8:
    59 00000026 8B 54 24 04                     	MOV		EDX, [ESP+4]
    60 0000002A 8A 44 24 08                     	MOV		AL, [ESP+8]
    61 0000002E EE                              	OUT		DX, AL
    62 0000002F C3                              	RET
    63 00000030                                 
    64 00000030                                 _io_out16:
    65 00000030 8B 54 24 04                     	MOV		EDX, [ESP+4]
    66 00000034 8A 44 24 08                     	MOV		AL, [ESP+8]
    67 00000038 66 EF                           	OUT		DX, AX
    68 0000003A C3                              	RET
    69 0000003B                                 
    70 0000003B                                 _io_out32:
    71 0000003B 8B 54 24 04                     	MOV		EDX, [ESP+4]
    72 0000003F 8A 44 24 08                     	MOV		AL, [ESP+8]
    73 00000043 EF                              	OUT		DX, EAX
    74 00000044 C3                              	RET
    75 00000045                                 	
    76 00000045                                 _io_load_eflags:
    77 00000045 9C                              	PUSHFD					; 指的是push eflags
    78 00000046 58                              	POP		EAX
    79 00000047 C3                              	RET
    80 00000048                                 
    81 00000048                                 _io_store_eflags:
    82 00000048 8B 44 24 04                     	MOV		EAX, [ESP+4]
    83 0000004C 50                              	PUSH	EAX
    84 0000004D 9D                              	POPFD					; 指的是pop eflags
    85 0000004E C3                              	RET
    86 0000004F                                 	
